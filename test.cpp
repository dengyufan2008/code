#include <bits/stdc++.h>
#define LL long long

using namespace std;

int main() {
  cin.tie(0), cout.tie(0);
  ios::sync_with_stdio(false);

  return 0;
}
/*
D 2^k个队伍打淘汰赛，一共会打2^k - 1场得到冠军。如图，按顺序给这些比赛编号，给定一个字符串，描述这些比赛的结果，0表示编号小的队伍获胜，1表示编号大的队伍获胜，?表示未知。
现在要进行q次询问，每次可能修改字符串中的某一位，每次修改后求最终有可能有几个队伍获胜。
E 给定一棵有根树，第i个节点有ai吨黄金，每吨价格为ci，初始时只有0号节点，然后进行q次操作。
1. 增加节点i为pi的儿子。
2. 求vi到根的路径上，买wi吨黄金的最小花费，如果黄金数量不足，就买下所有可以买的。
 对于操作2，每次操作都会实际导致黄金减少，要求输出能够购买的黄金数量和最小价格。
并且不能一次性读入所有的查询，每次输出后要flush才能继续读下一个查询，即不能离线处理。
*/